[logics for room 32 -- mesa east

%include  "rm30.msg"
%include "gamedefs"


%define	horizon				51
%define	time.before.death		20
%define	fall.distance			50


%define	hit.bottom			lf0
%define	ego.priority			lv1
%define	fell.to.left			lf3
%define	fell.to.right			lf4
%define	ego.at.1				lf6	[	Al's first script!!
%define	ego.at.2				lf7
%define	ego.at.3				lf8
%define	ego.at.4				lf9
%define	ego.at.5				lf10
%define	ego.at.6				lf11
%define	next.room				lv12
							
%object	a.waterfall			giant1


if (init.log)
	{
	reset( ego.falling);
	reset( ego.is.falling);
	reset( keep.cycling);

	set.horizon( horizon);

	load.view( v.waterfall.room32);
	load.view( v.ego.falling);
	load.view( v.ego.drowning);

	load.sound( s.ego.falling);
	load.sound( s.rapids);


	room.bottom = screen.bottom;

	set.priority( ego, 14);
	set.view( ego, v.ego);			[	jicof

	if (previous.room == 60)			[	pot exploded
		{
		set( ego.on.log);
		ignore.horizon( ego);
		ignore.objs( ego);
		set.priority( ego, 15);
		load.view( v.ego.drowning);
		load.view( v.ego.green.logged);
		position( ego, 89, 34);
		set.view( ego, v.ego.green.logged);
		print( 2);
		work = 31;
		load.pic( work);
		draw.pic( work);
		move.obj( ego, 108, 44, 1, ego.at.1);
		program.control( );
		}
	else
		{
		load.pic( current.room);
		draw.pic( current.room);
		discard.pic( current.room);

		start.motion( ego);
		if (previous.room == 34)
			{
			position( ego, 10, 54);
			}
		else
			{
			if (previous.room == 30)
				{
				position( ego, 8, 59);
				}
			else
				{
				position( ego, 19, 166);
				}
			}
		}
	draw( ego);

	animate.obj( a.waterfall);
	ignore.objs( a.waterfall);
	set.view( a.waterfall, v.waterfall.room32);
	position( a.waterfall, 111, 109);
	draw( a.waterfall);
	set( s.waterfall.done);

	show.pic();
	return();

	}



if (ego.falling)
	{
	goto no.input;
	}


if (lookit)
	{
	print( 1);
	set( have.match);
	}

[*****
:do.it							[	pressed "do something"
:use.it							[	pressed "use current obj"
:no.input
[*****

if (ego.on.log)					[	handle the log ride
	{
	if (ego.at.1)
		{
		reset( ego.at.1);
		move.obj( ego, 112, 52, 1, ego.at.2);
		}
	if (ego.at.2)
		{
		reset( ego.at.2);
		print( 3);
		set.view( ego, v.ego.drowning);
		move.obj( ego, 115, 92, 4, ego.at.3);
		}
	if (ego.at.3)
		{
		reset( ego.at.3);
		move.obj( ego, 132, 119, 4, ego.at.4);
		}
	if (ego.at.4)
		{
		reset( ego.at.4);
		set.view( ego, v.ego.green.logged);
		move.obj( ego, 132, 153, 1, ego.at.5);
		}
	if (ego.at.5)
		{
		reset( ego.at.5);
		move.obj( ego, 143, 153, 1, ego.at.6);
		}
	if (ego.at.6)
		{
		new.room( 1);				[	He's all yours, Sol!
		}
	goto exit;					
	}



get.posn( ego, x, y);					[	find what priority he's on
if (y > 131)
	{
	ego.priority = 14;
	}
else
	{
	if (y > 118)
		{
		ego.priority = 13;
		}
	else
		{
		if (y > 92)
			{
			ego.priority = 12;
			}
		else
			{
			if (y > 69)
				{
				ego.priority = 11;
				}
			else
				{
				if (y > 56)
					{
					ego.priority = 10;
					}
				else
					{
					ego.priority = 9;
					}
				}
			}
		}
	}

if (hit.special && !ego.falling)		[	He crashed somewhere!
	{
	if ((posn( ego,  3, 120, 26, 141) || [	left side of road, tilting right
		posn( ego, 64,  65, 66,  69) ||
		posn( ego,  9,  71, 19,  90)))
		{
   		--ego.priority;
		set( fell.to.left);
    		}
	else							[	left side of road, tilting left
		{
		if ((posn( ego, 9, 91, 16, 107) ||
			posn( ego, 85, 118, 97, 119) || 
			posn( ego, 54, 69, 66, 70) ||
			posn( ego, 92, 109, 97, 118)))
			{
			set( fell.to.left);
			}
		else						[	right side of road, tilting left
			{
			if ((posn( ego, 44, 151, 52, 160) ||
				posn( ego, 100, 94, 114, 131) ||
				posn( ego, 72, 58, 79, 68)))
				{
				set( fell.to.right);
				--ego.priority;
				}
			else					[	right side of road, tilting right
				{
				if ((posn( ego, 21,  52, 24,  56) ||
					posn( ego, 71,  69, 79,  81) ||
					posn( ego, 43, 133, 50, 150) ||
					posn( ego, 21,  83, 28,  92)))
					{
					set( fell.to.right);
					}
				else
					{
					if ((ego.dir == ego.up ||
						ego.dir == ego.up.left ||
						ego.dir == ego.up.right))
						{
						--ego.priority;
						}
					}
				}
			}
		}

	if (fell.to.left)
		{
		if (x > 10)
			{
			delta.x = -8;
			}
		else
			{
			delta.x = 0;
			}
		reposition( ego, delta.x, zero);
		}

	if (fell.to.right)
		{
		if (x < 136)				[	158 -13 -8
			{
			delta.x = 8;
			}
		else
			{
			delta.x = 0;
			}
		reposition( ego, delta.x, zero);
		}

	set.priority.f( ego, ego.priority);
	get.posn( ego, x, y);
	y += fall.distance;
	if (y > room.bottom)
		{
		y = room.bottom;
		}
	move.obj.f( ego, x, y, four, hit.bottom);
	set( ego.falling);
	set( ego.is.falling);
	set.view( ego, v.ego.falling);
	ignore.blocks( ego);
	sound( s.ego.falling, done);
	}


if (hit.bottom)
	{
	if (!debugging)
		{
		erase( ego);
		certain.death = 1;
		}
	else
		{
		current.room = 29;
		reset( ego.falling);
		reset( ego.is.falling);
		reset( keep.cycling);
		set.view( ego, v.ego);
		step.size( ego, one);
		new.room( 32);
		}
	}


[*****
:exit							[	test for leaving the room
[*****

if (s.waterfall.done && !ego.falling)
	{
	sound( s.rapids, s.waterfall.done);
	}

if (next.room)
	{
	new.room.f( next.room);
	}

if (edge.ego.hit == bottom)
	{
	new.room( 29);
	}

if (edge.ego.hit == top)
	{
	if (!first.catwalk.cross)
		{
		score += 5;
		set( first.catwalk.cross);
		}
	next.room = 34;
	}

if ((edge.ego.hit == left ||
	posn( ego, 0, 53, 6, 64)))
	{
	new.room( 30);
	}
